/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package SalesManagement;

import RootElement.SalesDBConnect;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import net.proteanit.sql.DbUtils;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JasperViewer;


/**
 *
 * @author User
 */
public class CustomerManagement extends javax.swing.JPanel {

    Connection con = null;
    PreparedStatement pst = null;
    Statement st = null;
    ResultSet rs = null;
    String Customerid;
    
    public CustomerManagement() {
        initComponents();
        
        con = SalesDBConnect.connect();
        
        String id=null;
        String a;
        int b;
        
       
        try
        {
            
            String q="SELECT customerId FROM smallscalecustomer ORDER BY customerId";
            st = con.createStatement();
            rs = st.executeQuery(q);
            
            while(rs.next())
            {
                id=rs.getString("customerId");
            }
            
           
                a=id.substring(0, 3);
                b=Integer.parseInt(id.substring(3,6));
                b=b+1;
                String i=a+String.valueOf(b);
                cID.setText(i);
                Customerid = i;
              
        }
        catch(Exception e)
        {
            System.out.println(e);
        
        }
        
        loadTable();
    }
    
    public void loadTable()
    {
        try
        {
            String q4="SELECT * FROM smallScaleCustomer";
            pst = con.prepareStatement(q4);
            rs = pst.executeQuery();
            CustomerTable.setModel(DbUtils.resultSetToTableModel(rs));
        }
        catch(Exception e)
        {
            DisplayMessage.display("Error");
        } 
    }
    
    
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        cID = new javax.swing.JTextField();
        cName = new javax.swing.JTextField();
        cPOC = new javax.swing.JTextField();
        cEmail = new javax.swing.JTextField();
        cContact = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        cAddress = new javax.swing.JTextArea();
        cState = new javax.swing.JTextField();
        cPostal = new javax.swing.JTextField();
        cCountry = new javax.swing.JTextField();
        Clear = new javax.swing.JButton();
        AddCustomer = new javax.swing.JButton();
        c = new javax.swing.JLabel();
        e = new javax.swing.JLabel();
        p = new javax.swing.JLabel();
        cn = new javax.swing.JLabel();
        pc = new javax.swing.JLabel();
        ct = new javax.swing.JLabel();
        a = new javax.swing.JLabel();
        s = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        customerName = new javax.swing.JTextField();
        Search = new javax.swing.JButton();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        custID = new javax.swing.JTextField();
        custName = new javax.swing.JTextField();
        custPOC = new javax.swing.JTextField();
        custEmail = new javax.swing.JTextField();
        custContact = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        custState = new javax.swing.JTextField();
        custPostal = new javax.swing.JTextField();
        custCountry = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        custAddress = new javax.swing.JTextArea();
        un = new javax.swing.JLabel();
        up = new javax.swing.JLabel();
        ue = new javax.swing.JLabel();
        uc = new javax.swing.JLabel();
        uct = new javax.swing.JLabel();
        us = new javax.swing.JLabel();
        upc = new javax.swing.JLabel();
        ua = new javax.swing.JLabel();
        Update = new javax.swing.JButton();
        Delete = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        CustomerTable = new javax.swing.JTable();
        Check = new javax.swing.JButton();

        jTabbedPane1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setForeground(new java.awt.Color(255, 0, 0));

        jLabel1.setText("Customer ID");

        cID.setEnabled(false);
        cID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cIDActionPerformed(evt);
            }
        });

        cName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cNameKeyTyped(evt);
            }
        });

        cPOC.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cPOCKeyTyped(evt);
            }
        });

        cContact.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cContactKeyTyped(evt);
            }
        });

        jLabel2.setText("Customer Name");

        jLabel3.setText("Point of Contact");

        jLabel4.setText("Email Address");

        jLabel5.setText("Contact No");

        jLabel6.setText("Address");

        jLabel7.setText("State/Province");

        jLabel8.setText("Postal Code");

        jLabel9.setText("Country");

        cAddress.setColumns(20);
        cAddress.setRows(5);
        cAddress.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                cAddressFocusLost(evt);
            }
        });
        cAddress.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cAddressKeyTyped(evt);
            }
        });
        jScrollPane1.setViewportView(cAddress);

        cState.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cStateKeyTyped(evt);
            }
        });

        cPostal.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cPostalKeyTyped(evt);
            }
        });

        cCountry.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cCountryKeyTyped(evt);
            }
        });

        Clear.setText("Clear Details");
        Clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearActionPerformed(evt);
            }
        });

        AddCustomer.setText("Add Customer");
        AddCustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddCustomerActionPerformed(evt);
            }
        });

        c.setForeground(new java.awt.Color(255, 51, 51));

        e.setForeground(new java.awt.Color(255, 51, 51));

        p.setForeground(new java.awt.Color(255, 51, 51));

        cn.setForeground(new java.awt.Color(255, 51, 51));

        pc.setForeground(new java.awt.Color(255, 51, 51));

        a.setForeground(new java.awt.Color(255, 51, 51));

        s.setForeground(new java.awt.Color(255, 51, 51));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(33, 33, 33))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel2)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel4)
                                        .addComponent(jLabel3)
                                        .addComponent(jLabel5)))
                                .addGap(18, 18, 18)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cName, javax.swing.GroupLayout.DEFAULT_SIZE, 225, Short.MAX_VALUE)
                            .addComponent(cPOC)
                            .addComponent(cEmail)
                            .addComponent(cContact)
                            .addComponent(cID)))
                    .addComponent(Clear, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(c, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(p, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(e, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cn, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(51, 51, 51)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel6)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9))
                        .addGap(31, 31, 31)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cState)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 223, Short.MAX_VALUE)
                            .addComponent(cPostal)
                            .addComponent(cCountry))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ct, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pc, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(s, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(a, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(AddCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(21, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(cID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addGap(24, 24, 24)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(cName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(c, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(a, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(cPOC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel7)
                        .addComponent(cState, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(p, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(s, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4)
                        .addComponent(cEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel8)
                        .addComponent(cPostal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(e, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pc, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5)
                        .addComponent(cContact, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel9)
                        .addComponent(cCountry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(cn, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ct, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(44, 44, 44)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AddCustomer)
                    .addComponent(Clear))
                .addContainerGap(244, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Add Customer Details", jPanel1);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel2MouseClicked(evt);
            }
        });

        jLabel10.setText("Customer Name");

        customerName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                customerNameKeyReleased(evt);
            }
        });

        Search.setText("Search");
        Search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchActionPerformed(evt);
            }
        });

        jLayeredPane1.setBackground(new java.awt.Color(255, 255, 255));
        jLayeredPane1.setBorder(javax.swing.BorderFactory.createTitledBorder(" Customter Details"));

        jLabel11.setText("Customer Name");

        jLabel12.setText("Customer ID");

        jLabel13.setText("Point of Contact");

        jLabel14.setText("Email Address");

        jLabel15.setText("Contact No");

        custID.setEnabled(false);
        custID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                custIDActionPerformed(evt);
            }
        });

        custName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                custNameKeyTyped(evt);
            }
        });

        custPOC.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                custPOCKeyTyped(evt);
            }
        });

        custContact.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                custContactActionPerformed(evt);
            }
        });
        custContact.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                custContactKeyTyped(evt);
            }
        });

        jLabel16.setText("Address");

        jLabel17.setText("State/Province");

        jLabel18.setText("Postal Code");

        jLabel19.setText("Country");

        custState.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                custStateKeyTyped(evt);
            }
        });

        custPostal.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                custPostalKeyTyped(evt);
            }
        });

        custCountry.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                custCountryKeyTyped(evt);
            }
        });

        custAddress.setColumns(20);
        custAddress.setRows(5);
        custAddress.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                custAddressKeyTyped(evt);
            }
        });
        jScrollPane2.setViewportView(custAddress);

        un.setForeground(new java.awt.Color(255, 51, 51));

        up.setForeground(new java.awt.Color(255, 51, 51));

        ue.setForeground(new java.awt.Color(255, 51, 51));

        uc.setForeground(new java.awt.Color(255, 51, 51));

        uct.setForeground(new java.awt.Color(255, 51, 51));

        us.setForeground(new java.awt.Color(255, 51, 51));

        upc.setForeground(new java.awt.Color(255, 51, 51));

        ua.setForeground(new java.awt.Color(255, 51, 51));

        jLayeredPane1.setLayer(jLabel11, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jLabel12, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jLabel13, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jLabel14, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jLabel15, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(custID, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(custName, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(custPOC, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(custEmail, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(custContact, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jLabel16, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jLabel17, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jLabel18, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jLabel19, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(custState, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(custPostal, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(custCountry, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jScrollPane2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(un, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(up, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(ue, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(uc, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(uct, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(us, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(upc, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(ua, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPane1Layout = new javax.swing.GroupLayout(jLayeredPane1);
        jLayeredPane1.setLayout(jLayeredPane1Layout);
        jLayeredPane1Layout.setHorizontalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jLayeredPane1Layout.createSequentialGroup()
                        .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12)
                            .addComponent(jLabel11))
                        .addGap(21, 21, 21)
                        .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(custName, javax.swing.GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE)
                            .addComponent(custID)))
                    .addGroup(jLayeredPane1Layout.createSequentialGroup()
                        .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel14)
                            .addComponent(jLabel15)
                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(custPOC)
                            .addComponent(custEmail, javax.swing.GroupLayout.DEFAULT_SIZE, 219, Short.MAX_VALUE)
                            .addComponent(custContact))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jLayeredPane1Layout.createSequentialGroup()
                        .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(up, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ue, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(uc, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(36, 36, 36)
                        .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel17)
                            .addComponent(jLabel16, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel18, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel19, javax.swing.GroupLayout.Alignment.LEADING)))
                    .addComponent(un, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(custPostal, javax.swing.GroupLayout.DEFAULT_SIZE, 234, Short.MAX_VALUE)
                    .addComponent(custState)
                    .addComponent(custCountry)
                    .addComponent(jScrollPane2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(uct, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(upc, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(us, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ua, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        jLayeredPane1Layout.setVerticalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ua, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jLayeredPane1Layout.createSequentialGroup()
                        .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel12)
                                    .addComponent(custID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel16))
                                .addGap(27, 27, 27)
                                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel11)
                                    .addComponent(custName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(un, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27)
                        .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(up, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel13)
                                        .addComponent(custPOC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel17)
                                        .addComponent(custState, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPane1Layout.createSequentialGroup()
                                        .addGap(25, 25, 25)
                                        .addComponent(ue, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jLayeredPane1Layout.createSequentialGroup()
                                        .addGap(26, 26, 26)
                                        .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(upc, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(jLabel14)
                                                .addComponent(custEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jLabel18)
                                                .addComponent(custPostal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                .addGap(27, 27, 27)
                                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(uc, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel15)
                                        .addComponent(custContact, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel19)
                                        .addComponent(custCountry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(uct, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(us, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        Update.setText("Update Details");
        Update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateActionPerformed(evt);
            }
        });

        Delete.setText("Delete Customer");
        Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteActionPerformed(evt);
            }
        });

        CustomerTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Customer ID", "Name", "Address", "Contact  No", "Email", "Country", "State/Province", "Postal Code", "Contact Point"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        CustomerTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CustomerTableMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(CustomerTable);

        Check.setText("Check Sales");
        Check.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CheckActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLayeredPane1))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane3))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jLabel10)
                        .addGap(27, 27, 27)
                        .addComponent(customerName, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Search, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(Check, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(70, 70, 70))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(243, 243, 243)
                .addComponent(Update, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(78, 78, 78)
                .addComponent(Delete)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(customerName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Search))
                .addGap(27, 27, 27)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                .addComponent(Check)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Update)
                    .addComponent(Delete))
                .addGap(10, 10, 10))
        );

        jTabbedPane1.addTab("Modify Customer Details", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void AddCustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddCustomerActionPerformed
       
        

        if(cName.getText().isEmpty())
        {
            c.setText("!");   
        }    
        
        
        if(cPOC.getText().isEmpty())
        {
            p.setText("!");   
        }    
        
        String email = cEmail.getText();
        TextValidator t7 = new TextValidator(email);
        if(email.isEmpty()||!t7.isEmail())
        {
            e.setText("!");   
        }    
        

        if(cAddress.getText().isEmpty())
        {
            a.setText("!");   
        }    
        

        if(cState.getText().isEmpty())
        {
            s.setText("!");   
        }   
        
        

        if(cPostal.getText().isEmpty())
        {
            pc.setText("!");   
        }    
        

        if(cCountry.getText().isEmpty())
        {
            ct.setText("!");   
        }    
        
        String contact = cContact.getText();
        if(contact.isEmpty() || contact.length() != 11)
        {
            cn.setText("!");   
        }
        
        if(!contact.isEmpty())
        {
            contact = "+" + contact;
        }
        
        
        
        if("!".equals(c.getText())||"!".equals(p.getText())||"!".equals(e.getText())||"!".equals(cn.getText())||"!".equals(a.getText())||"!".equals(s.getText())||"!".equals(pc.getText())||"!".equals(ct.getText()))
        {
            DisplayMessage.display("Invalid Data Entry");
            c.setText("");
            p.setText("");
            e.setText("");
            cn.setText("");
            a.setText("");
            s.setText("");
            pc.setText("");
            ct.setText("");
        }        
        else
        {
            try
            {
                String q1 = "INSERT INTO smallScaleCustomer VALUES ('"+ Customerid +"','"+ cName.getText() +"','"+ cAddress.getText() +"','"+ contact +"','"+ email +"','"+ cCountry.getText() +"','"+ cState.getText() +"','"+ cPostal.getText() +"','"+ cPOC.getText() +"')";

                pst = con.prepareStatement(q1); 
                pst.execute();
                DisplayMessage.display("Customer Successfully Added");
            }

            catch (Exception e)
            {
                DisplayMessage.display("Unable to add customer");
            }
        }
    }//GEN-LAST:event_AddCustomerActionPerformed

    private void custIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_custIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_custIDActionPerformed

    private void custContactActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_custContactActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_custContactActionPerformed

    private void cIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cIDActionPerformed

    private void SearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchActionPerformed
        String name=customerName.getText();
        
        try
        {
            String q2="SELECT * FROM smallScaleCustomer WHERE name LIKE '%"+ name +"%'";
            pst = con.prepareStatement(q2);
            rs = pst.executeQuery();
            CustomerTable.setModel(DbUtils.resultSetToTableModel(rs));
 
        }
        catch(Exception e)
        {
            DisplayMessage.display("Error");
        } 
        //loadTable();
    }//GEN-LAST:event_SearchActionPerformed

    private void DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteActionPerformed
        int c = JOptionPane.showConfirmDialog(null,"Are you sure you want to delete?");
        
        if(c==0)
        {
            String id=custName.getText();
            
            try
            {
                String q3="DELETE FROM smallScaleCustomer WHERE name='"+ id +"'";
                pst = con.prepareStatement(q3);
                pst.execute();
                DisplayMessage.display("Customer Deleted Successfully");
            }
            catch(Exception e)
            {
                 DisplayMessage.display("Unable to Delete Customer");
            }  
        }
        
        loadTable();
        
        custAddress.setText("");
        custContact.setText("");
        custCountry.setText("");
        custEmail.setText("");
        custID.setText("");
        custName.setText("");
        custPOC.setText("");
        custPostal.setText("");
        custState.setText("");
        customerName.setText("");
        
        
        
        
        
    }//GEN-LAST:event_DeleteActionPerformed

    private void CustomerTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CustomerTableMouseClicked
       int r = CustomerTable.getSelectedRow();
        
       String id = CustomerTable.getValueAt(r,0).toString();
       String name = CustomerTable.getValueAt(r,1).toString();
       String address = CustomerTable.getValueAt(r,2).toString();
       String contact = CustomerTable.getValueAt(r,3).toString();
       String email = CustomerTable.getValueAt(r,4).toString();
       String country = CustomerTable.getValueAt(r,5).toString();
       String state = CustomerTable.getValueAt(r,6).toString();
       String postal = CustomerTable.getValueAt(r,7).toString();
       String poc = CustomerTable.getValueAt(r,8).toString();
       
       
        custAddress.setText(address);
        custContact.setText(contact);
        custCountry.setText(country);
        custEmail.setText(email);
        custID.setText(id);
        custName.setText(name);
        custPOC.setText(poc);
        custPostal.setText(postal);
        custState.setText(state);
       
    }//GEN-LAST:event_CustomerTableMouseClicked

    private void jPanel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel2MouseClicked
        loadTable();
    }//GEN-LAST:event_jPanel2MouseClicked

    private void UpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateActionPerformed
       
        String id = custID.getText();


        String name = custName.getText();
        if(name.isEmpty())
        {
            un.setText("!");   
        }

        String address = custAddress.getText();
        if(address.isEmpty())
        {
            ua.setText("!");   
        }


        String contact = custContact.getText();
        if(contact.isEmpty() || contact.length() != 12)
        {
            uc.setText("!");   
        }
        

        String email = custEmail.getText();
        TextValidator t14 = new TextValidator(email);
        if(email.isEmpty()||!t14.isEmail())
        {
            ue.setText("!");   
        }
       
       
       
        String country = custCountry.getText();
        if(country.isEmpty())
        {
            uct.setText("!");   
        }


        String state = custState.getText();
        if(state.isEmpty())
        {
            us.setText("!");   
        }


        String postal = custPostal.getText();
        if(postal.isEmpty())
        {
            upc.setText("!");   
        }


        String poc = custPOC.getText();
        if(poc.isEmpty())
        {
            up.setText("!");   
        }
       
       
        if("!".equals(un.getText())||"!".equals(up.getText())||"!".equals(ue.getText())||"!".equals(uc.getText())||"!".equals(ua.getText())||"!".equals(us.getText())||"!".equals(upc.getText())||"!".equals(uct.getText()))
        {
            DisplayMessage.display("Invalid Data Entry");
            uc.setText("");
            up.setText("");
            ue.setText("");
            un.setText("");
            ua.setText("");
            us.setText("");
            upc.setText("");
            uct.setText("");
        }
        
        
        else
        { 
            int c = JOptionPane.showConfirmDialog(null,"Are you sure you want to update?");
            
            if(c==0)
            {
                try
                {
            
                    String q10 = "UPDATE smallscalecustomer SET name='"+ name +"', address='"+ address +"', telephone='"+ contact +"', email='"+ email +"', country='"+ country +"', state='"+ state +"', postalCode='"+ postal +"', POC='"+ poc +"' where customerId='"+ id +"'";

                    pst = con.prepareStatement(q10); 
                    pst.execute();
                    DisplayMessage.display("Customer Details Updated Successfully");

                    custAddress.setText("");
                    custContact.setText("");
                    custCountry.setText("");
                    custEmail.setText("");
                    custID.setText("");
                    custName.setText("");
                    custPOC.setText("");
                    custPostal.setText("");
                    custState.setText("");
                    customerName.setText("");

                    loadTable();
                }
        
                catch (Exception e)
                {
                    DisplayMessage.display("Unable to update customer details");
                }
            }
        }
        
        
        
    }//GEN-LAST:event_UpdateActionPerformed

    private void ClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearActionPerformed
        cAddress.setText("");
        cContact.setText("");
        cCountry.setText("");
        cEmail.setText("");
        cID.setText("");
        cName.setText("");
        cPOC.setText("");
        cPostal.setText("");
        cState.setText("");
        cName.setText("");
    }//GEN-LAST:event_ClearActionPerformed

    private void cAddressFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cAddressFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_cAddressFocusLost

    private void cContactKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cContactKeyTyped
        if(!Character.isDigit(evt.getKeyChar()))
        {
            evt.consume();
        }
    }//GEN-LAST:event_cContactKeyTyped

    private void cPostalKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cPostalKeyTyped
        if(!Character.isDigit(evt.getKeyChar()))
        {
            evt.consume();
        }
    }//GEN-LAST:event_cPostalKeyTyped

    private void cAddressKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cAddressKeyTyped
        if(!Character.isAlphabetic(evt.getKeyChar()) && !Character.isDigit(evt.getKeyChar()) && !(evt.getKeyChar()==','))
        {
            if(Character.isSpaceChar(evt.getKeyChar()))
            {
                
            }
            else
            evt.consume();
        }
        
        
    }//GEN-LAST:event_cAddressKeyTyped

    private void cNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cNameKeyTyped
        if(!Character.isAlphabetic(evt.getKeyChar()))
        {
            if(Character.isSpaceChar(evt.getKeyChar()))
            {
                
            }
            else
            evt.consume();
        }
    }//GEN-LAST:event_cNameKeyTyped

    private void cPOCKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cPOCKeyTyped
        if(!Character.isAlphabetic(evt.getKeyChar()))
        {
            if(Character.isSpaceChar(evt.getKeyChar()))
            {
                
            }
            else
            evt.consume();
        }
    }//GEN-LAST:event_cPOCKeyTyped

    private void cStateKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cStateKeyTyped
        if(!Character.isAlphabetic(evt.getKeyChar()))
        {
            if(Character.isSpaceChar(evt.getKeyChar()))
            {
                
            }
            else
            evt.consume();
        }
    }//GEN-LAST:event_cStateKeyTyped

    private void cCountryKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cCountryKeyTyped
        if(!Character.isAlphabetic(evt.getKeyChar()))
        {
            if(Character.isSpaceChar(evt.getKeyChar()))
            {
                
            }
            else
            evt.consume();
        }
    }//GEN-LAST:event_cCountryKeyTyped

    private void customerNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_customerNameKeyReleased
        String name=customerName.getText();
        
        try
        {
            String q2="SELECT * FROM smallScaleCustomer WHERE name LIKE '%"+ name +"%'";
            pst = con.prepareStatement(q2);
            rs = pst.executeQuery();
            CustomerTable.setModel(DbUtils.resultSetToTableModel(rs));
 
        }
        catch(Exception e)
        {
            DisplayMessage.display("Error");
        } 
    }//GEN-LAST:event_customerNameKeyReleased

    private void custNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_custNameKeyTyped
        if(!Character.isAlphabetic(evt.getKeyChar()))
        {
            if(Character.isSpaceChar(evt.getKeyChar()))
            {
                
            }
            else
            evt.consume();
        }
    }//GEN-LAST:event_custNameKeyTyped

    private void custPOCKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_custPOCKeyTyped
        if(!Character.isAlphabetic(evt.getKeyChar()))
        {
            if(Character.isSpaceChar(evt.getKeyChar()))
            {
                
            }
            else
            evt.consume();
        }
    }//GEN-LAST:event_custPOCKeyTyped

    private void custAddressKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_custAddressKeyTyped
        if(!Character.isAlphabetic(evt.getKeyChar()) && !Character.isDigit(evt.getKeyChar()) && !(evt.getKeyChar()==','))
        {
            if(Character.isSpaceChar(evt.getKeyChar()))
            {
                
            }
            else
            evt.consume();
        }
    }//GEN-LAST:event_custAddressKeyTyped

    private void custStateKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_custStateKeyTyped
        if(!Character.isAlphabetic(evt.getKeyChar()))
        {
            if(Character.isSpaceChar(evt.getKeyChar()))
            {
                
            }
            else
            evt.consume();
        }
    }//GEN-LAST:event_custStateKeyTyped

    private void custCountryKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_custCountryKeyTyped
        if(!Character.isAlphabetic(evt.getKeyChar()))
        {
            if(Character.isSpaceChar(evt.getKeyChar()))
            {
                
            }
            else
            evt.consume();
        }
    }//GEN-LAST:event_custCountryKeyTyped

    private void custContactKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_custContactKeyTyped
        if(!Character.isDigit(evt.getKeyChar()))
        {
            evt.consume();
        }
    }//GEN-LAST:event_custContactKeyTyped

    private void custPostalKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_custPostalKeyTyped
        if(!Character.isDigit(evt.getKeyChar()))
        {
            evt.consume();
        }
    }//GEN-LAST:event_custPostalKeyTyped

    private void CheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CheckActionPerformed
        JasperPrint jp;
        Connection conn;
        try {
           
            con =  SalesDBConnect.connect();
        } catch (Exception e) {
           
        }
        String report="src\\Reports\\CustomerSales.jasper";

        
        try {
            jp = JasperFillManager.fillReport(report, null,con);
            JasperViewer.viewReport(jp,false);
        } catch (JRException ex) {
            Logger.getLogger(PriceModification.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_CheckActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddCustomer;
    private javax.swing.JButton Check;
    private javax.swing.JButton Clear;
    private javax.swing.JTable CustomerTable;
    private javax.swing.JButton Delete;
    private javax.swing.JButton Search;
    private javax.swing.JButton Update;
    private javax.swing.JLabel a;
    private javax.swing.JLabel c;
    private javax.swing.JTextArea cAddress;
    private javax.swing.JTextField cContact;
    private javax.swing.JTextField cCountry;
    private javax.swing.JTextField cEmail;
    private javax.swing.JTextField cID;
    private javax.swing.JTextField cName;
    private javax.swing.JTextField cPOC;
    private javax.swing.JTextField cPostal;
    private javax.swing.JTextField cState;
    private javax.swing.JLabel cn;
    private javax.swing.JLabel ct;
    private javax.swing.JTextArea custAddress;
    private javax.swing.JTextField custContact;
    private javax.swing.JTextField custCountry;
    private javax.swing.JTextField custEmail;
    private javax.swing.JTextField custID;
    private javax.swing.JTextField custName;
    private javax.swing.JTextField custPOC;
    private javax.swing.JTextField custPostal;
    private javax.swing.JTextField custState;
    private javax.swing.JTextField customerName;
    private javax.swing.JLabel e;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel p;
    private javax.swing.JLabel pc;
    private javax.swing.JLabel s;
    private javax.swing.JLabel ua;
    private javax.swing.JLabel uc;
    private javax.swing.JLabel uct;
    private javax.swing.JLabel ue;
    private javax.swing.JLabel un;
    private javax.swing.JLabel up;
    private javax.swing.JLabel upc;
    private javax.swing.JLabel us;
    // End of variables declaration//GEN-END:variables
}
