package SalesManagement;

import RootElement.SalesDBConnect;
import java.awt.event.ActionEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.DecimalFormat;
import java.util.HashMap;
import javax.swing.Action;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import net.proteanit.sql.DbUtils;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author user
 */
public class InvoiceGeneration extends javax.swing.JPanel {

    Connection con = null;
    PreparedStatement pst = null;
    PreparedStatement pst1 = null;
    Statement st = null;
    ResultSet rs = null;
    String order;
    String oType;
    double subAmount;
    double netAmount;
    String s;
    String invoiceId;
    String iDate;
    String id=null;
    String a;
    int b;
    String i;
    
    
    public InvoiceGeneration() {
        initComponents();
        con = SalesDBConnect.connect();
    
        try
        {
            
            String q="SELECT invoiceNo FROM invoice ORDER BY invoiceNo";
            st = con.createStatement();
            rs = st.executeQuery(q);
            
            while(rs.next())
            {
                id=rs.getString("invoiceNo");
            }
            
           
                a=id.substring(0, 3);
                b=Integer.parseInt(id.substring(3,6));
                b=b+1;
                i=a+String.valueOf(b);
                invoice.setText(i);
                invoiceId = i;
                System.out.println(i);
          
        }
        catch(Exception e)
        {
        
        }
        
        
        iDate = GetDate.getDate("yyyy-MM-dd");
        date.setText(iDate);
        fillComboBox();
    }
    
    public void loadTableExport()
    {
        try
        {
            String q1 = "select s1.productId AS ProductID, s1.name AS Description, s1.unitPriceForeign AS UnitPrice, s2.quantity AS Quantity from finishedProducts s1, smallscalehasgood s2 where  s1.productId= s2.productId and orderId='"+ order +"'";
            pst = con.prepareStatement(q1);
            rs = pst.executeQuery();
            ProductsTable.setModel(DbUtils.resultSetToTableModel(rs));
        }
        catch(Exception e)
        {
            DisplayMessage.display("Error");
        }
    };
    
    public void loadTableRetail()
    {
        try
        {
            String q1 = "select s1.productId AS ProductID, s1.name AS Description, s1.unitPriceLocal AS UnitPrice, s2.quantity AS Quantity from finishedProducts s1, smallscalehasgood s2 where  s1.productId= s2.productId and orderId='"+ order +"'";
            pst = con.prepareStatement(q1);
            rs = pst.executeQuery();
            ProductsTable.setModel(DbUtils.resultSetToTableModel(rs));
        }
        catch(Exception e)
        {
           DisplayMessage.display("Error");
        }
    };
    
    private int dotCount(JTextField jtf)
    {
        int count=0;
        if("".equals(jtf.getText()))
        {
            return 0;
        }
        
        else
        {
            
            for(int i=0; i<=jtf.getText().length()-1;i++)
            {
                if(jtf.getText().charAt(i)=='.')
                count++;
            }
        }
        
         
        return count;
    }
    
    public void fillComboBox()
    {
        try
	{
            String q = "SELECT DISTINCT orderId FROM smallscalehasgood";
            st = con.createStatement();
            rs = st.executeQuery(q);
                
            while(rs.next())
            {
                String value=rs.getString("orderId");
                oNo.addItem(value);
            }
                
            oNo.setSelectedIndex(-1);
        }
        
        catch (Exception e)
        {
            DisplayMessage.display("Error");
        }      
           
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        invoice = new javax.swing.JTextField();
        name = new javax.swing.JTextField();
        state = new javax.swing.JTextField();
        postal = new javax.swing.JTextField();
        country = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        address = new javax.swing.JTextArea();
        clear = new javax.swing.JButton();
        Save = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        net = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        tp = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        ta = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        sp = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        sa = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        dp = new javax.swing.JTextField();
        da = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        ProductsTable = new javax.swing.JTable();
        jLabel19 = new javax.swing.JLabel();
        sub = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        Calculate = new javax.swing.JButton();
        SearchButton = new javax.swing.JButton();
        date = new javax.swing.JTextField();
        received = new javax.swing.JTextField();
        type = new javax.swing.JTextField();
        due = new javax.swing.JTextField();
        l1 = new javax.swing.JLabel();
        l2 = new javax.swing.JLabel();
        l3 = new javax.swing.JLabel();
        oNo = new javax.swing.JComboBox<>();
        Send = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(790, 590));

        jLabel1.setText("Invoice No");

        jLabel2.setText("Date");

        jLabel3.setText("Order No");

        jLabel4.setText("Order Type");

        jLabel5.setText("Order Date");

        jLabel6.setText("Due Date");

        jLabel7.setText("Customer Name");

        jLabel8.setText("Address");

        jLabel9.setText("State/Province");

        jLabel10.setText("Postal Code");

        jLabel11.setText("Country");

        invoice.setEnabled(false);
        invoice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                invoiceActionPerformed(evt);
            }
        });

        name.setEnabled(false);

        state.setEnabled(false);

        postal.setEnabled(false);

        country.setEnabled(false);

        address.setColumns(20);
        address.setRows(5);
        address.setEnabled(false);
        jScrollPane1.setViewportView(address);

        clear.setText("Clear");
        clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearActionPerformed(evt);
            }
        });

        Save.setText("Save");
        Save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveActionPerformed(evt);
            }
        });

        jButton3.setText("Print");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel12.setText("Net Amount");

        net.setEnabled(false);

        jLabel13.setText("Shipping cost");

        tp.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tpKeyTyped(evt);
            }
        });

        jLabel14.setText("Amount");

        ta.setEnabled(false);

        jLabel15.setText("Tax");

        sp.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                spKeyTyped(evt);
            }
        });

        jLabel16.setText("Amount");

        sa.setEnabled(false);

        jLabel17.setText("Discount");

        dp.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                dpKeyTyped(evt);
            }
        });

        da.setEnabled(false);

        jLabel18.setText("Amount");

        ProductsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Product ID", "Description", "Unit Price", "Quantity"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(ProductsTable);
        if (ProductsTable.getColumnModel().getColumnCount() > 0) {
            ProductsTable.getColumnModel().getColumn(0).setResizable(false);
            ProductsTable.getColumnModel().getColumn(1).setResizable(false);
            ProductsTable.getColumnModel().getColumn(2).setResizable(false);
            ProductsTable.getColumnModel().getColumn(3).setResizable(false);
        }

        jLabel19.setText("Sub Amount");

        sub.setEnabled(false);
        sub.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                subActionPerformed(evt);
            }
        });

        jLabel20.setText("%");

        jLabel21.setText("%");

        jLabel22.setText("%");

        Calculate.setText("Calculate Net Amount");
        Calculate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CalculateActionPerformed(evt);
            }
        });

        SearchButton.setText("Search");
        SearchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchButtonActionPerformed(evt);
            }
        });

        date.setEnabled(false);

        received.setEnabled(false);

        type.setEnabled(false);

        due.setEnabled(false);

        l1.setForeground(new java.awt.Color(255, 51, 51));

        l2.setForeground(new java.awt.Color(255, 51, 51));

        l3.setForeground(new java.awt.Color(255, 51, 51));

        oNo.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                oNoPropertyChange(evt);
            }
        });

        Send.setText("Send");
        Send.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SendActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel17)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel15)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel22))
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                            .addComponent(jLabel13)
                                            .addGap(24, 24, 24)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(jLabel20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jLabel21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                                    .addComponent(jLabel12)
                                    .addComponent(jLabel19)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel6)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel5)
                                        .addComponent(jLabel4)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(type)
                                    .addComponent(date)
                                    .addComponent(invoice)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(tp, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(l3, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(sp, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(dp, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(l1, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(l2, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                        .addGap(10, 10, 10)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel14)
                                            .addComponent(jLabel18)
                                            .addComponent(jLabel16))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(sa, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(da, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(ta, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(net)
                                    .addComponent(sub)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(oNo, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(SearchButton))
                                    .addComponent(received)
                                    .addComponent(due)
                                    .addComponent(Calculate, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGap(57, 57, 57)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(clear, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(13, 13, 13)
                                        .addComponent(Save, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(Send, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel9)
                                        .addGap(37, 37, 37)
                                        .addComponent(state, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel11)
                                    .addComponent(jLabel10))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(322, 322, 322)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel8))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(country, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(name, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(postal, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jScrollPane1)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel3)
                                .addGap(58, 58, 58))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(50, 50, 50)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(country, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(34, 34, 34)
                                        .addComponent(jLabel6))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(43, 43, 43)
                                        .addComponent(jLabel11)))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(invoice, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1))
                                .addGap(10, 10, 10)
                                .addComponent(date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(SearchButton)
                                    .addComponent(oNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(received, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(state, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel9))))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(postal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10)
                            .addComponent(type, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(due, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel19)
                            .addComponent(sub, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(l1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(dp)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel17)
                                .addComponent(da, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel18)
                                .addComponent(jLabel20)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel14)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(sp)
                                                .addComponent(jLabel21))
                                            .addComponent(l2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(sa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel13)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel16)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(tp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel15)
                                .addComponent(ta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel22))
                            .addComponent(l3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(14, 14, 14)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(net, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(clear)
                    .addComponent(jButton3)
                    .addComponent(Save)
                    .addComponent(Calculate)
                    .addComponent(Send))
                .addGap(134, 134, 134))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void SearchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchButtonActionPerformed
        order = String.valueOf(oNo.getSelectedItem());
        
        
        try
        {
            String q = "select s1.receivedDate,s1.orderType,s1.dueDate,name, s2.address, s2.state, s2.postalCode, s2.country from smallscaleorder s1,smallscalecustomer s2 where s1.customerId=s2.customerId and orderId='"+ order +"'";
            Statement st = con.createStatement();
            rs = st.executeQuery(q);
            
            
            while(rs.next())
            {
                String oReceived = rs.getString("receivedDate");
                received.setText(oReceived);
                
                oType = rs.getString("orderType");
                type.setText(oType);
                
                String oDue = rs.getString("dueDate");
                due.setText(oDue);
                
                String cName = rs.getString("name");
                name.setText(cName);
                
                String cAddress = rs.getString("address");
                address.setText(cAddress);
                
                String cState = rs.getString("state");
                state.setText(cState);
                
                String cPostal = rs.getString("postalCode");
                postal.setText(cPostal);
                
                String cCountry = rs.getString("country");
                country.setText(cCountry);
                
            } //end of while
            
        }
        
        catch(Exception e)
        {
            DisplayMessage.display("Unable to retrieve order details");
        }
        
        if (oType.equals("retail"))
        {
        
            loadTableRetail();
        }
        
        else if (oType.equals("export"))
        {
        
            loadTableExport();
        }
        
        for(int r=0; r<=ProductsTable.getRowCount()-1; r++)
        {
            int q= Integer.parseInt(String.valueOf(ProductsTable.getValueAt(r,3)));
            double p=Double.parseDouble(String.valueOf(ProductsTable.getValueAt(r,2)));
            subAmount = subAmount+(q*p);
        }
        
        DecimalFormat df = new DecimalFormat("#.00");
        s= String.valueOf(df.format(subAmount));
        sub.setText(s);
        
        
    }//GEN-LAST:event_SearchButtonActionPerformed

    private void CalculateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CalculateActionPerformed
        double discount = 0;
        double shipping = 0;
        double tax = 0;

        if(!dp.getText().equals(""))
        {
            discount = Double.parseDouble(dp.getText());

        }
       
       //TextValidator t1 = new TextValidator(String.valueOf(dp.getText()));
        if(String.valueOf(dp.getText()).isEmpty())
        {
            l1.setText("!");   
        }
       
       
        if(!sp.getText().equals(""))
        {
             shipping = Double.parseDouble(sp.getText());

        }
        
        //TextValidator t2 = new TextValidator(String.valueOf(sp.getText()));
        if(String.valueOf(sp.getText()).isEmpty())
        {
            l2.setText("!");   
        }
       
       
        if(!tp.getText().equals(""))
        {
            tax = Double.parseDouble(tp.getText());
            
        }
        
        //TextValidator t3 = new TextValidator(String.valueOf(tp.getText()));
        
        if(String.valueOf(tp.getText()).isEmpty())
        {
            l3.setText("!");   
        }
       
        if("!".equals(l1.getText())||"!".equals(l2.getText())||"!".equals(l3.getText()))
        {
            DisplayMessage.display("Invalid Data Entry");
            l1.setText("");
            l2.setText("");
            l3.setText("");
        }        
        
        else
        {
            
            DecimalFormat df = new DecimalFormat("#.00");
            
            discount = (discount/100)*subAmount;
            
            da.setText(String.valueOf(df.format(discount)));
            subAmount = subAmount - discount;


            tax = (tax/100)*subAmount;
            ta.setText(String.valueOf(df.format(tax)));
            subAmount = subAmount + tax;

            shipping = (shipping/100)*subAmount;
            sa.setText(String.valueOf(df.format(shipping)));
            netAmount = subAmount + shipping;

            net.setText(String.valueOf(df.format(netAmount)));
        }
       
       
       
    

    
     
       
    }//GEN-LAST:event_CalculateActionPerformed

    private void clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearActionPerformed
        name.setText("");
        net.setText("");
        oNo.setSelectedIndex(-1);
        postal.setText("");
        received.setText("");
        sa.setText("");
        sp.setText("");
        state.setText("");
        sub.setText("");
        ta.setText("");
        tp.setText("");
        type.setText("");
        address.setText("");
        country.setText("");
        da.setText("");
        date.setText("");
        dp.setText("");
        due.setText("");
        invoice.setText("");
        
        try
        {
            
            String q="SELECT invoiceNo FROM invoice ORDER BY invoiceNo";
            st = con.createStatement();
            rs = st.executeQuery(q);
            
            while(rs.next())
            {
                id=rs.getString("invoiceNo");
            }
            
           
                a=id.substring(0, 3);
                b=Integer.parseInt(id.substring(3,6));
                b=b+1;
                String i=a+String.valueOf(b);
                invoice.setText(i);
                invoiceId = i;
                System.out.println(i);
          
        }
        catch(Exception e)
        {
        
        }
        
        iDate = GetDate.getDate("yyyy-MM-dd");
        date.setText(iDate);
    
    }//GEN-LAST:event_clearActionPerformed

    private void invoiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_invoiceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_invoiceActionPerformed

    private void SaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveActionPerformed
        try
        {
            String q4 = "INSERT INTO invoice(invoiceNo, invoiceDate, amount, invoiceType) VALUES ('"+ invoiceId +"','"+ iDate +"','"+ netAmount +"','Small Scale')";
            String q5 = "INSERT INTO smallordergoodinvoice VALUES ('"+ order +"','"+ invoiceId +"')";
            
            pst = con.prepareStatement(q4); 
            pst.execute();
            
            pst = con.prepareStatement(q5); 
            pst.execute();
            
            DisplayMessage.display("Invoice Details Successfully Added");
        }
        catch(Exception e)
        {
            DisplayMessage.display("Failed to save invoice details");
        }    
    }//GEN-LAST:event_SaveActionPerformed

    private void dpKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dpKeyTyped
        int count = dotCount(dp);
        if(count<1)
        {
            if(Character.isDigit(evt.getKeyChar()) || evt.getKeyChar()=='.')
            {

            }
            else
            {
                evt.consume();
            }
               
        }
        else 
        {
            if(Character.isDigit(evt.getKeyChar()))
            {
                
            }
            else
            {
                evt.consume();
            }
        }
    }//GEN-LAST:event_dpKeyTyped

    private void spKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_spKeyTyped
        int count = dotCount(sp);
        if(count<1)
        {
            if(Character.isDigit(evt.getKeyChar()) || evt.getKeyChar()=='.')
            {

            }
            else
            {
                evt.consume();
            }
               
        }
        else 
        {
            if(Character.isDigit(evt.getKeyChar()))
            {
                
            }
            else
            {
                evt.consume();
            }
        }
    }//GEN-LAST:event_spKeyTyped

    private void tpKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tpKeyTyped
        int count = dotCount(tp);
        if(count<1)
        {
            if(Character.isDigit(evt.getKeyChar()) || evt.getKeyChar()=='.')
            {

            }
            else
            {
                evt.consume();
            }
               
        }
        else 
        {
            if(Character.isDigit(evt.getKeyChar()))
            {
                
            }
            else
            {
                evt.consume();
            }
        }
    }//GEN-LAST:event_tpKeyTyped

    private void subActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_subActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_subActionPerformed

    private void oNoPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_oNoPropertyChange
        
    }//GEN-LAST:event_oNoPropertyChange

    private void SendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SendActionPerformed
        NotifyCustomer n = new NotifyCustomer();
        n.setVisible(true);
    }//GEN-LAST:event_SendActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        
        
        HashMap param=new HashMap();
        param.put("invoice",i);
        SalesManagement showme=new SalesManagement("src\\Reports\\Invoice.jasper",param);
        showme.setVisible(true);
    }//GEN-LAST:event_jButton3ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Calculate;
    private javax.swing.JTable ProductsTable;
    private javax.swing.JButton Save;
    protected javax.swing.JButton SearchButton;
    private javax.swing.JButton Send;
    private javax.swing.JTextArea address;
    private javax.swing.JButton clear;
    private javax.swing.JTextField country;
    private javax.swing.JTextField da;
    private javax.swing.JTextField date;
    private javax.swing.JTextField dp;
    private javax.swing.JTextField due;
    private javax.swing.JTextField invoice;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel l1;
    private javax.swing.JLabel l2;
    private javax.swing.JLabel l3;
    private javax.swing.JTextField name;
    private javax.swing.JTextField net;
    private javax.swing.JComboBox<String> oNo;
    private javax.swing.JTextField postal;
    private javax.swing.JTextField received;
    private javax.swing.JTextField sa;
    private javax.swing.JTextField sp;
    private javax.swing.JTextField state;
    private javax.swing.JTextField sub;
    private javax.swing.JTextField ta;
    private javax.swing.JTextField tp;
    private javax.swing.JTextField type;
    // End of variables declaration//GEN-END:variables
}
